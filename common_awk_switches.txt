To check awk version                                                                                            :-  awk --version
To print tabbed output of specific columns {also, any delimeter can be inserted if required, by this method}    :-  awk '{print $3 "\t" $4}' filename
To Print number of lines in a file {advantage over wc –l is that – this command does not print the filename}    :-  awk 'END { print NR }' filename
To search for a pattern in the column and print the entire row for the searched pattern                         :-  awk '/pattern/ {print $0}' marks.txt
To read the awk command from a file and execute it                                                              :-  awk -f read.awk marks.txt
To Print Count of lines containing the pattern                                                                  :-  awk '/pattern/ {++cnt} END {print "COUNT=" cnt}' marks.txt
To assign a variable before its execution and print it                                                          :-  awk -v name=jerry 'BEGIN {print name}'
To print the number of arguments passed to the command line (special AWK Variable - ARGC)                       :-  awk 'BEGIN {print "Arguments=" ARGC}' one two three
To print the current user (special variable ENVIRON & USER)                                                     :-  awk 'BEGIN {print ENVIRON["USER"]}'
To print the value of a previously assigned variable                                                            :-  echo abc | awk -v val=$value '{print val}'
To print the current filename (special variable FILENAME)                                                       :-  awk 'END {print FILENAME}' marks.txt
                                                                                                                :-  awk '{print FILENAME}' marks.txt|uniq
                                                                                                                    Note:- If END is not used, it will print the filename same # of times, 
                                                                                                                    equal to the # of rows in it
To emulate custom delimeter like in cut, special variable FS (field separator)                                  :-  awk 'BEGIN {FS = ")"} ; {print $2}' marks.txt                                                                                                                 
To print number of fields in current record (special variable NF)                                               :-  awk 'NR==1 {print NF}' filename
