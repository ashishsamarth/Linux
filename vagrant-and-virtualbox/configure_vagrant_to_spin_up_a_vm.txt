1.  Login to the machine, create a dedicated folder and navigate to it, or use the $HOME directory

2.  Execute the following to create (initialize) a Vagrant file
        vagrant init

3.  Above mentioned commnand, will create a 'Vagrantfile' in the current directory
    This file holds a sample of how to configure the vagrant file to spin up a vm, and is written in ruby

4.  Open the 'VagrantFile' in vi or an editor of your choice, the default file will look like the following

	# -*- mode: ruby -*-
	# vi: set ft=ruby :
	
	# All Vagrant configuration is done below. The "2" in Vagrant.configure
	# configures the configuration version (we support older styles for
	# backwards compatibility). Please don't change it unless you know what
	# you're doing.
	Vagrant.configure("2") do |config|
		config.(base)
        	# A lot of information in the comments
        	# A lot of information in the comments
        	# A lot of information in the comments
        	# A lot of information in the comments
	end

5.  To spin an Ubuntu vm, we need to modify the VagrantFile to look like the following.
    Note: The configurations are nested similar to python code (tabbed)
	# -*- mode: ruby -*-
	# vi: set ft=ruby :
	
	# All Vagrant configuration is done below. The "2" in Vagrant.configure
	# configures the configuration version (we support older styles for
	# backwards compatibility). Please don't change it unless you know what
	# you're doing.
	Vagrant.configure("2") do |config|
        	# The following line indicates the 'name' of the vm to be created
		config.vm.define "acs" do |acs|
            		# The following line defines the 'operating system' on the vm
			acs.vm.box="ubuntu/trusty64"
            		# The following line defines the 'hostname' of the vm
			acs.vm.hostname="acs"
            		# The following line defines the 'network type' and 'ip address' of the vm
			acs.vm.network "private_network", ip:"192.168.56.2"
		end
	end

6.  Now, that the vagrant file has been configured to spin up a 'Ubuntu' vm with ip address 192.168.33.10.
    save and exit the file, and execute the following on terminal
        vagrant up

        Output:
        [devops@sandbox vagrant]$ vagrant up
        Bringing machine 'acs' up with 'virtualbox' provider...
        ==> acs: Importing base box 'ubuntu/trusty64'...
        ==> acs: Matching MAC address for NAT networking...
        ==> acs: Checking if box 'ubuntu/trusty64' version '20190514.0.0' is up to date...
        ==> acs: Setting the name of the VM: vagrant_acs_1673375707928_30335
        ==> acs: Clearing any previously set forwarded ports...
        ==> acs: Clearing any previously set network interfaces...
        ==> acs: Preparing network interfaces based on configuration...
            acs: Adapter 1: nat
            acs: Adapter 2: hostonly
        ==> acs: Forwarding ports...
            acs: 22 (guest) => 2222 (host) (adapter 1)
        ==> acs: Booting VM...
        ==> acs: Waiting for machine to boot. This may take a few minutes...
            acs: SSH address: 127.0.0.1:2222
            acs: SSH username: vagrant
            acs: SSH auth method: private key
            acs:
            acs: Vagrant insecure key detected. Vagrant will automatically replace
            acs: this with a newly generated keypair for better security.
            acs:
            acs: Inserting generated public key within guest...
            acs: Removing insecure key from the guest if it's present...
            acs: Key inserted! Disconnecting and reconnecting using new SSH key...
        ==> acs: Machine booted and ready!
        ==> acs: Checking for guest additions in VM...
            acs: The guest additions on this VM do not match the installed version of
            acs: VirtualBox! In most cases this is fine, but in rare cases it can
            acs: prevent things such as shared folders from working properly. If you see
            acs: shared folder errors, please make sure the guest additions within the
            acs: virtual machine match the version of VirtualBox you have installed on
            acs: your host and reload your VM.
            acs:
            acs: Guest Additions Version: 4.3.40
            acs: VirtualBox Version: 7.0
        ==> acs: Setting hostname...
        ==> acs: Configuring and enabling network interfaces...
        ==> acs: Mounting shared folders...
            acs: /vagrant => /home/devops/vagrant
        [devops@sandbox vagrant]$

7.  The above mentioned command, will sping up the ubuntu vm, to validate if its running,
    execute the following command on the terminal
        vmboxmanage list runningvms

        Output:
        [devops@sandbox vagrant]$ vboxmanage list runningvms
        "vagrant_acs_1673375707928_30335" {151b4973-cdb5-4f1f-83c9-1a0baab8a568}
        [devops@sandbox vagrant]$
        
8.  Now, that the vagrant vm is up and running, lets get into the vm (via ssh)
    Execute the following command on the terminal
        vagrant ssh acs
        (We are using the vagrant module and acs is the name of the vm, same as in the VagrantFile)

        Output:
        [devops@sandbox vagrant]$ vagrant ssh acs
        Welcome to Ubuntu 14.04.6 LTS (GNU/Linux 3.13.0-170-generic x86_64)

        * Documentation:  https://help.ubuntu.com/

        System information as of Tue Jan 10 18:35:29 UTC 2023

        System load:  0.2               Processes:           83
        Usage of /:   3.6% of 39.34GB   Users logged in:     0
        Memory usage: 25%               IP address for eth0: 10.0.2.15
        Swap usage:   0%

        Graph this data and manage this system at:
            https://landscape.canonical.com/

        UA Infrastructure Extended Security Maintenance (ESM) is not enabled.

        0 updates can be installed immediately.
        0 of these updates are security updates.

        Enable UA Infrastructure ESM to receive 64 additional security updates.
        See https://ubuntu.com/advantage or run: sudo ua status

        New release '16.04.7 LTS' available.
        Run 'do-release-upgrade' to upgrade to it.
        vagrant@acs:~$
